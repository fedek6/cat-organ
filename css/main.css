/* Cat organ! */
body {
  height: 100vh;
  background-image: url("../img/bg.png");
  background-repeat: repeat;
  background-position: left top;

  padding: 5% 32px 32px 32px;

  box-sizing: border-box;

  font-family: 'VT323', monospace;
  color: Black;

  /* Center horizontally */
  display: flex;
  justify-content: center;
}

.shadow {
  box-shadow: 4px 4px 0px 0px rgba(0,0,0,1);
  background-color: white;
  border: 1px solid Black;
}

.value {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  align-items: center;
}

/* Info */
#info {
  position: absolute;
  right: 32px;
  bottom: 32px;
  display: inline-block;

  padding: .5em 1em;
}

#info a {
  color: Black;
}

#info a:hover {
  color: red;
  text-decoration: none;
}

/* Main */
main {
  /* border: solid 1px Red; */

  width: 66vw;
  height: 70vh;

  row-gap: 16px;
}

/* Logo header */
#main-header {
  flex-basis: 20%;
}

#main-header > img {
  height: 100%;
  width: auto;
}

/* Container with a cats and keys */
main > div {
  flex-grow: 1;
  width: 100%;
}

/* Cats */
#cats {
  flex-grow: 1;
  position: relative;

  width: 100%;
}

#keys {
  /* height: 30%; */
  flex-basis: 50%;
  width: 100%;
}

/* Cat choir */
.cat-choir {
  display: flex;
  flex-direction: row;
  justify-content: center;
  flex-wrap: nowrap;

  padding: 0;
  margin: 0;
}

/* Cat component */
.cat-choir > li {
  list-style: none;

  width: 86px;
  height: 118px;

  background-image: url("../img/cat-spritesheet-001.png");
  background-repeat: no-repeat;
  background-position: 0 center;
  background-size: auto 100%;

  image-rendering: pixelated;
  image-rendering: -moz-crisp-edges;
  image-rendering: crisp-edges;
}

.cat-choir > .-black-cat {
  background-image: url("../img/cat-spritesheet-002.png");
}

.cat-choir > .-animate {
  animation-name: cat-singing;
  animation-duration: .6s;
  animation-timing-function: steps(2);
  animation-iteration-count: infinite;
}

@keyframes cat-singing {
  from {
    background-position: 0 center;
  }
  to {
    background-position: -172px center;
  }
}

/* Cat row */
.cat-row {
  position: absolute;
  width: 100%;
}

.cat-row.-lower {
  bottom: 0;
  z-index: 1;
}

.cat-row.-upper {
  bottom: 64px;
  z-index: 0;
}

/* Keyboard */
.keyboard {
  display: flex;
  flex-direction: row;
  justify-content: center;
  flex-wrap: nowrap;
  align-items: stretch;

  height: 100%;

  list-style: none;

  padding: 0;
  margin: 0;

  border-top: solid 2px black;

  position: relative;
}

.keyboard > li {
  flex: 1 1 auto;
}

.keyboard > .-active,
.keyboard > li:active {
  background-image: url("../img/black-shadow.png");
  background-repeat: repeat-x;
  background-position: left bottom;
}

.keyboard > li ~ li {
  border-left: solid 2px Black;
}

.keyboard > .-sharp-flat {
  height: 60%;
  background-color: black;
  width: calc(100% / 18);
  display: block;
  position: absolute;

  border: none;

  transform: scaleY(-1);
}

.keyboard > .-sharp-flat.-active,
.keyboard > .-sharp-flat:active {
  background-position: left top;
}

/* Each black key position */
.keyboard > li:nth-of-type(2) {
  left: calc((100% / 9) - (100% / 18) / 2);
}

.keyboard > li:nth-of-type(4) {
  left: calc(2 * (100% / 9) - (100% / 18) / 2);
}

.keyboard > li:nth-of-type(7) {
  left: calc(4 * (100% / 9) - (100% / 18) / 2);
}

.keyboard > li:nth-of-type(9) {
  left: calc(5 * (100% / 9) - (100% / 18) / 2);
}

.keyboard > li:nth-of-type(11) {
  left: calc(6 * (100% / 9) - (100% / 18) / 2);
}

.keyboard > li:nth-of-type(14) {
  left: calc(8 * (100% / 9) - (100% / 18) / 2);
}
